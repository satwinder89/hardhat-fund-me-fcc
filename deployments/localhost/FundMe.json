{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x282405af2b530e7ded5d044e930adda8493e32c435ee5a070f879cfdd6e9d469",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "949266",
    "logsBloom": "0x
    "blockHash": "0xc1f91c4ef9d28550e16fe4e61129d7add4c36a6658b9acb587c609a2faa9ffa9",
    "transactionHash": "0x282405af2b530e7ded5d044e930adda8493e32c435ee5a070f879cfdd6e9d469",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "949266",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "89e1b5e42f40b1643ba92dabb986f87f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        // priceFeedAddress = https://docs.chain.link/docs/ethereum-addresses/\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0xca52d599242db7bafe2f2c0d43897b88f52cf4772c71ca498acdca7700ccda57\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.15;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2b6a49e83d1a70ecbae2a1d0f41fa36cda3a76aceb772f32206a1dab94d4e644\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010cd380380620010cd83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f61806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030c565b6040516100ba9190610823565b60405180910390f35b6100cb6103a4565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108a1565b6105e6565b6040516101019190610823565b60405180910390f35b34801561011657600080fd5b5061011f6105fe565b60405161012c9190610823565b60405180910390f35b34801561014157600080fd5b5061014a61060b565b604051610157919061092d565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610631565b60405161018c9190610957565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b7919061099e565b610657565b6040516101c99190610957565b60405180910390f35b6802b5e3af16b1880000610211600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069690919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a28565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a77565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610ae2565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104d65760006001828154811061045157610450610b0f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ce90610b3e565b91505061042e565b50600067ffffffffffffffff8111156104f2576104f1610b86565b5b6040519080825280602002602001820160405280156105205781602001602082028036833780820191505090505b5060019080519060200190610536929190610763565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055d90610be6565b60006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90610c47565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a2836106d2565b90506000670de0b6b3a764000085836106bb9190610c67565b6106c59190610cf0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190610d99565b5050509150506402540be4008161075b9190610e14565b915050919050565b8280548282559060005260206000209081019282156107dc579160200282015b828111156107db5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610783565b5b5090506107e991906107ed565b5090565b5b808211156108065760008160009055506001016107ee565b5090565b6000819050919050565b61081d8161080a565b82525050565b60006020820190506108386000830184610814565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086e82610843565b9050919050565b61087e81610863565b811461088957600080fd5b50565b60008135905061089b81610875565b92915050565b6000602082840312156108b7576108b661083e565b5b60006108c58482850161088c565b91505092915050565b6000819050919050565b60006108f36108ee6108e984610843565b6108ce565b610843565b9050919050565b6000610905826108d8565b9050919050565b6000610917826108fa565b9050919050565b6109278161090c565b82525050565b6000602082019050610942600083018461091e565b92915050565b61095181610863565b82525050565b600060208201905061096c6000830184610948565b92915050565b61097b8161080a565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b361083e565b5b60006109c284828501610989565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a12601b836109cb565b9150610a1d826109dc565b602082019050919050565b60006020820190508181036000830152610a4181610a05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a828261080a565b9150610a8d8361080a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac257610ac1610a48565b5b828201905092915050565b600081519050610adc81610972565b92915050565b600060208284031215610af857610af761083e565b5b6000610b0684828501610acd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b498261080a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b7b57610b7a610a48565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bd0600083610bb5565b9150610bdb82610bc0565b600082019050919050565b6000610bf182610bc3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c31600b836109cb565b9150610c3c82610bfb565b602082019050919050565b60006020820190508181036000830152610c6081610c24565b9050919050565b6000610c728261080a565b9150610c7d8361080a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cb657610cb5610a48565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cfb8261080a565b9150610d068361080a565b925082610d1657610d15610cc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d4081610d21565b8114610d4b57600080fd5b50565b600081519050610d5d81610d37565b92915050565b6000819050919050565b610d7681610d63565b8114610d8157600080fd5b50565b600081519050610d9381610d6d565b92915050565b600080600080600060a08688031215610db557610db461083e565b5b6000610dc388828901610d4e565b9550506020610dd488828901610d84565b9450506040610de588828901610acd565b9350506060610df688828901610acd565b9250506080610e0788828901610d4e565b9150509295509295909350565b6000610e1f82610d63565b9150610e2a83610d63565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e6957610e68610a48565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ea657610ea5610a48565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ee357610ee2610a48565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f2057610f1f610a48565b5b82820290509291505056fea2646970667358221220b5cd5373b52951f764d2d7b0365200e98e4ab0bf8593b80c7ade293305278d0b64736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030c565b6040516100ba9190610823565b60405180910390f35b6100cb6103a4565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108a1565b6105e6565b6040516101019190610823565b60405180910390f35b34801561011657600080fd5b5061011f6105fe565b60405161012c9190610823565b60405180910390f35b34801561014157600080fd5b5061014a61060b565b604051610157919061092d565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610631565b60405161018c9190610957565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b7919061099e565b610657565b6040516101c99190610957565b60405180910390f35b6802b5e3af16b1880000610211600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069690919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a28565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a77565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610ae2565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104d65760006001828154811061045157610450610b0f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ce90610b3e565b91505061042e565b50600067ffffffffffffffff8111156104f2576104f1610b86565b5b6040519080825280602002602001820160405280156105205781602001602082028036833780820191505090505b5060019080519060200190610536929190610763565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055d90610be6565b60006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90610c47565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a2836106d2565b90506000670de0b6b3a764000085836106bb9190610c67565b6106c59190610cf0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190610d99565b5050509150506402540be4008161075b9190610e14565b915050919050565b8280548282559060005260206000209081019282156107dc579160200282015b828111156107db5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610783565b5b5090506107e991906107ed565b5090565b5b808211156108065760008160009055506001016107ee565b5090565b6000819050919050565b61081d8161080a565b82525050565b60006020820190506108386000830184610814565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086e82610843565b9050919050565b61087e81610863565b811461088957600080fd5b50565b60008135905061089b81610875565b92915050565b6000602082840312156108b7576108b661083e565b5b60006108c58482850161088c565b91505092915050565b6000819050919050565b60006108f36108ee6108e984610843565b6108ce565b610843565b9050919050565b6000610905826108d8565b9050919050565b6000610917826108fa565b9050919050565b6109278161090c565b82525050565b6000602082019050610942600083018461091e565b92915050565b61095181610863565b82525050565b600060208201905061096c6000830184610948565b92915050565b61097b8161080a565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b361083e565b5b60006109c284828501610989565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a12601b836109cb565b9150610a1d826109dc565b602082019050919050565b60006020820190508181036000830152610a4181610a05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a828261080a565b9150610a8d8361080a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac257610ac1610a48565b5b828201905092915050565b600081519050610adc81610972565b92915050565b600060208284031215610af857610af761083e565b5b6000610b0684828501610acd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b498261080a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b7b57610b7a610a48565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bd0600083610bb5565b9150610bdb82610bc0565b600082019050919050565b6000610bf182610bc3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c31600b836109cb565b9150610c3c82610bfb565b602082019050919050565b60006020820190508181036000830152610c6081610c24565b9050919050565b6000610c728261080a565b9150610c7d8361080a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cb657610cb5610a48565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cfb8261080a565b9150610d068361080a565b925082610d1657610d15610cc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d4081610d21565b8114610d4b57600080fd5b50565b600081519050610d5d81610d37565b92915050565b6000819050919050565b610d7681610d63565b8114610d8157600080fd5b50565b600081519050610d9381610d6d565b92915050565b600080600080600060a08688031215610db557610db461083e565b5b6000610dc388828901610d4e565b9550506020610dd488828901610d84565b9450506040610de588828901610acd565b9350506060610df688828901610acd565b9250506080610e0788828901610d4e565b9150509295509295909350565b6000610e1f82610d63565b9150610e2a83610d63565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e6957610e68610a48565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ea657610ea5610a48565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ee357610ee2610a48565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f2057610f1f610a48565b5b82820290509291505056fea2646970667358221220b5cd5373b52951f764d2d7b0365200e98e4ab0bf8593b80c7ade293305278d0b64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}